#!/bin/bash

##termux-change-repo

clear

# Spinner that runs while a given PID is alive
spin() {
    local pid="$1"
    local delay=0.1
    local chars='|/-\\'
    tput civis
    while kill -0 "$pid" 2>/dev/null; do
        for ((i=0; i<${#chars}; i++)); do
            printf "\r%-50s [ %c ]" "$spinner_msg" "${chars:i:1}"
            sleep $delay
        done
    done
    tput cnorm
}

# Run command with spinner and checkmark
run_with_spinner() {
    local msg="$1"
    spinner_msg="$msg"
    shift

    # Animate the message *cleanly* first
    echo -n ""
    for ((i=0; i<${#msg}; i++)); do
        printf "%s" "${msg:$i:1}"
        sleep 0.005
    done

    # Clear any leftovers from previous output
    tput el

    # Background the command and start spinner
    ("$@") &> /dev/null &
    local cmd_pid=$!
    spin "$cmd_pid"
    wait "$cmd_pid"

    # Green checkmark after finish
    tput setaf 2
    printf "\r%-50s [ ✔ ]\n" "$spinner_msg"
    tput sgr0
}

run_with_spinner "Installing mandatory packages before installation " bash -c "pkg in ncurses-utils -y"

clear
            echo "

████████████████████████
██                    ██
██        ██████████  ██
██       ██ █         ██
██      ██  █         ██
██     ██   █         ██
██     █    ████████  ██
██    ██    █         ██
██   ████████         ██
██  ██      █         ██
██  █       ████████  ██
██                    ██
████████████████████████

  AltaeraAI - v6.0.5

    by ThinkThrough


  "


echo "Welcome!

" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

echo "Before we install ...

" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

echo "________________________________________________________________
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

echo "
Notice: AltaeraAI periodically undergoes heavy changes that can disrupt the installation process. If this disruption occurs, please try the installation a little later.
"

echo "________________________________________________________________
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

echo "[If you wish to stop the installation, press 'Ctrl+D']

" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

echo "
~~~~~~~~~~~~~~~~~~~~~~~~~~
Beginning installation in:
~~~~~~~~~~~~~~~~~~~~~~~~~~
"

echo "
6 ...
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);
sleep 1
echo "
5 ...
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);
sleep 1
echo "
4 ...
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);
sleep 1
echo "
3 ...
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);
sleep 1
echo "
2 ...
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);
sleep 1
echo "
1 ...
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);
sleep 1

clear

            echo "
  _____                      
 |_   _|__ _ _ _ __ _  ___ __
   | |/ -_) '_| '  \ || \ \ /
   |_|\___|_| |_|_|_\_,_/_\_\                
                                    
  Installing Termux dependencies ...


  "

echo "________________________________________________________________
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

run_with_spinner "Updating Termux apt repositories' mirrors " bash -c "cd '/data/data/com.termux/files/usr/etc/apt' && rm 'sources.list' && wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/termux/sources.list && cd"

run_with_spinner "Installing Termux Activity Manager " bash -c "pkg install termux-am -y"

if [ ! -d "/sdcard" ]; then
termux-setup-storage
else
:
fi

run_with_spinner "Installing necessary Termux packages" bash -c "apt update && apt -o DPkg::Options::='--force-confnew' -y upgrade && apt-get -o DPkg::Options::='--force-confnew' -y install openssl-1.1 wget && pkg install wget curl proot-distro nodejs -y"

run_with_spinner "Removing previous AltaeraAI files [if there are any] " bash -c "proot-distro remove altaera"

rm -rf 'AltaeraAI-tmp'
rm -rf 'AltaeraAI'
rm -rf 'AltaeraAI/termux'
mkdir 'AltaeraAI-tmp'
mkdir 'AltaeraAI-tmp/termux-default'
mkdir 'AltaeraAI-tmp/models'
mkdir 'AltaeraAI'
mkdir 'AltaeraAI/termux'

sleep 0.5
        
## wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/scripts/altaera_install_model.sh -q --show-progress
## chmod a+x 'altaera_install_model.sh'
## bash 'altaera_install_model.sh'

clear
            echo "

████████████████████████
██                    ██
██        ██████████  ██
██       ██ █         ██
██      ██  █         ██
██     ██   █         ██
██     █    ████████  ██
██    ██    █         ██
██   ████████         ██
██  ██      █         ██
██  █       ████████  ██
██                    ██
████████████████████████

  AltaeraAI - v6.0.5

    by ThinkThrough


  "

echo "________________________________________________________________
" | sed  -e :a -e "s/^.\{1,$(tput cols)\}$/ & /;ta" | tr -d '\n' | head -c $(tput cols);

run_with_spinner "Installing initial files "wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/scripts/altaera_install_pt-2.sh -q --show-progress && chmod a+x 'altaera_install_pt-2.sh' && bash 'altaera_install_pt-2.sh'"

{
wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/scripts/altaera-install_method.sh -q --show-progress
chmod a+x 'altaera-install_method.sh'
} &> /dev/null 2>&1;
bash 'altaera-install_method.sh'

clear

##if [ -f $PREFIX/etc/proot-distro/altaera.sh ]
##then
##{
##wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/scripts/pd-in.sh
##} &> /dev/null 2>&1;
##chmod a+x 'pd-in.sh'
##bash 'pd-in.sh'
##else
##:
##fi

run_with_spinner "Moving the AI model and prompt file into proper directory " bash -c "mv '/data/data/com.termux/files/home/AltaeraAI-tmp/chat-with-bob.txt' '/data/data/com.termux/files/usr/var/lib/proot-distro/installed-rootfs/altaera/root/kcpp-ae/prompts/chat-with-bob.txt' && mv '/data/data/com.termux/files/home/AltaeraAI-tmp/models' '/data/data/com.termux/files/usr/var/lib/proot-distro/installed-rootfs/altaera/root'"

run_with_spinner "Cleaning up File System " bash -c "rm -rf '/data/data/com.termux/files/home/altaera_install_pt-1.sh' && rm -rf '/data/data/com.termux/files/home/altaera_install_pt-2.sh' && rm -rf 'altaera-install_method.sh' && rm -rf '/data/data/com.termux/files/home/altaera_install_model.sh' && rm -rf '/data/data/com.termux/files/home/install' && rm -rf '/data/data/com.termux/files/home/pd-in.sh'"

clear

if [ -f $PREFIX/etc/proot-distro/altaera.sh ]
then
{
wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/scripts/pd-login.sh
} &> /dev/null 2>&1;
chmod a+x 'pd-login.sh'
bash 'pd-login.sh'
else
:
fi
clear

{
wget https://raw.githubusercontent.com/ThinkThroughLabs/AltaeraAI/main/scripts/altaera-pd_integrity_check.sh
chmod a+x 'altaera-pd_integrity_check.sh'
} &> /dev/null 2>&1;
bash 'altaera-pd_integrity_check.sh'
rm -rf 'altaera-pd_integrity_check.sh'
rm -rf '/data/data/com.termux/files/home/pd-login.sh'

# Typing animation function
type_text_centered() {
    text="$1"
    delay="${2:-0.05}"
    term_width=$(tput cols)
    padding=$(( (term_width - ${#text}) / 2 ))

    printf "%*s" "$padding" ""
    for ((i=0; i<${#text}; i++)); do
        printf "%s" "${text:$i:1}"
        sleep "$delay"
    done
    echo
}

# Final success message
clear
term_width=$(tput cols)
success_msg="✔ Installation completed successfully."
padding=$(( (term_width - ${#success_msg}) / 2 ))
echo -e "\n"
printf "%*s\033[1;32m%s\033[0m\n\n" "$padding" "" "$success_msg"

# Animated, centered instruction
type_text_centered "To start, please type in ae."

exec bash

exit
